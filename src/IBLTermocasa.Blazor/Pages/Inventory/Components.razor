

@page "/components"

@attribute [Authorize(IBLTermocasaPermissions.Components.Default)]
@using IBLTermocasa.Components
@using IBLTermocasa.Localization
@using IBLTermocasa.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using CsvHelper
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using IBLTermocasa.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using ComponentItemDto = IBLTermocasa.Components.ComponentItemDto
@using Volo.Abp.Http.Client
@using Size = MudBlazor.Size
@using Color = MudBlazor.Color
@using MudBlazor
@inherits IBLTermocasaComponentBase
@inject IComponentsAppService ComponentsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<IBLTermocasaResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Components"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

<MudGrid>
    <MudItem xs="12" sm="6">
        @* ************************* Main Info on left side ************************* *@
        <MudPaper Class="pa-4">
            <MudDataGrid @ref="ComponentMudDataGrid" T="ComponentDto" 
                                   Items="@ComponentList" ReadOnly="false" 
                                   EditMode="MudBlazor.DataGridEditMode.Cell" 
                                   Hover="true" SelectedItemChanged="OnSelectedItemChanged"
                                   EditTrigger="DataGridEditTrigger.Manual"  
                                   Bordered="true" Dense="true" Filterable="false" SortMode="SortMode.Single"
                                   CommittedItemChanges="@OnCommittedItemChanges">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">@L["Components"]</MudText>
                    <MudSpacer />
                    <MudButton Color="Color.Primary" OnClick="OpenCreateComponentDialog">@L["NewComponent"]</MudButton>
                </ToolBarContent>
                <Columns>
                    <PropertyColumn Property="x => x.Code" Title="@L["Code"]" IsEditable="false" Sortable="true" Filterable="true">
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.Name" Title="@L["Name"]" IsEditable="true" Sortable="true" Filterable="true">
                    </PropertyColumn>
                    <TemplateColumn>
                        <EditTemplate>
                            <MudTooltip Inline="true" Text="@L["Remove"]" Arrow="true" Placement="MudBlazor.Placement.Top">
                                <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.DeleteSweep" OnClick="() => DeleteComponentAsync(context.Item)"/>
                            </MudTooltip>
                        </EditTemplate>
                    </TemplateColumn>
                </Columns>
            </MudDataGrid>
        </MudPaper>
    </MudItem>

    <MudItem xs="12" sm="6">

        @* ************************* Main Info on right side ************************* *@
        <MudPaper Class="pa-4">
            <MudDataGrid @ref="ComponentItemMudDataGrid" T="ComponentItemDto" Items="@ComponentItemList" ReadOnly="false" EditMode="MudBlazor.DataGridEditMode.Cell" Hover="true"
                         EditTrigger="DataGridEditTrigger.OnRowClick"
                         Bordered="true" Dense="true" Filterable="false" SortMode="SortMode.Single">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">@L["ComponentItems"]</MudText>
                    <MudSpacer />
                    <MudButton Disabled="@ComponentSelected" Color="Color.Primary" OnClick="OpenAssociateComponentItemDialogAsync">@L["AssociateMaterial"]</MudButton>
                </ToolBarContent>
                <Columns>
                    <PropertyColumn Property="x => x.IsDefault" Title="@L["IsDefault"]" IsEditable="true" Sortable="true" Filterable="true">
                        <EditTemplate>
                            <MudCheckBox T="bool" Value="context.Item.IsDefault" ValueChanged="() => OnIsDefaultChanged(!context.Item.IsDefault, context.Item)"/>
                        </EditTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.MaterialCode" Title="@L["Code"]" IsEditable="false" Sortable="false" Filterable="false">
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.MaterialName" Title="@L["Name"]" IsEditable="false" Sortable="false" Filterable="false">
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.Id" Sortable="false" Filterable="false">
                        <HeaderTemplate>
                            <MudSpacer></MudSpacer>
                        </HeaderTemplate>
                        <EditTemplate>
                            <MudTooltip Inline="true" Text="@L["Remove"]" Arrow="true" Placement="MudBlazor.Placement.Top">
                                <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.DeleteSweep" OnClick="() => DeleteComponentItemAsync(context.Item)"/>
                            </MudTooltip>
                        </EditTemplate>
                    </PropertyColumn>
                </Columns>
                <NoRecordsContent>
                    @if (ComponentMudDataGrid.SelectedItem == null || ComponentMudDataGrid.SelectedItem.ComponentItems.IsNullOrEmpty())
                    {
                        <MudText>@L["NoDataSelected"]</MudText>
                    }
                </NoRecordsContent>
            </MudDataGrid>
            <MudItem xs="12" class="pt-3 d-flex justify-end">
                <MudButton Disabled="@ComponentSelected" Color="Color.Primary" OnClick="ApplyChanges">@L["ApplyChanges"]</MudButton>
            </MudItem>
        </MudPaper>
    </MudItem>
</MudGrid>

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider />


@code
{
    private Task OnIsDefaultChanged(bool newValue, ComponentItemDto item)
    { 
        if (ComponentItemList.Any(x => x.IsDefault) && newValue)
        {
            ComponentItemList.First(x => x.IsDefault).IsDefault = false;
        }
        ComponentItemList.First(x => x.Id == item.Id).IsDefault = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }
    
    private async Task ApplyChanges()
    {
        _selectedComponent.ComponentItems = ComponentItemList.ToList();
        await UpdateComponent(_selectedComponent);
        StateHasChanged();
    }
}
