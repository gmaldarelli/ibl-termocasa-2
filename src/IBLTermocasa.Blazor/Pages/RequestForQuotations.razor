

@page "/request-for-quotations"

@attribute [Authorize(IBLTermocasaPermissions.RequestForQuotations.Default)]
@using IBLTermocasa.RequestForQuotations
@using IBLTermocasa.Localization
@using IBLTermocasa.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using IBLTermocasa.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using Volo.Abp.Http.Client
@inherits IBLTermocasaComponentBase
@inject IRequestForQuotationsAppService RequestForQuotationsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<IBLTermocasaResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager
@using IBLTermocasa.RequestForQuotations
@using IBLTermocasa.Blazor.Components.RequestForQuotation


@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["RequestForQuotations"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>

        <Form id="RequestForQuotationSearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Filter.FilterText"
                              Autofocus="true"
                              Placeholder="@L["Search"]">
                    </TextEdit>
                </Addon>
                <Addon AddonType="AddonType.End">
                    <SubmitButton Form="RequestForQuotationSearchForm" Clicked="GetRequestForQuotationsAsync">
                        <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                    </SubmitButton>
                </Addon>
            </Addons>
        </Form>
        
        <Row Class="mt-3 mb-3"> 
            <div class="col-md-12">
                <a href="javascript:;" class="text-decoration-none" @onclick="() => ShowAdvancedFilters = !ShowAdvancedFilters">@L["SeeAdvancedFilters"]</a>
            </div>
        </Row>
        
        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["QuoteNumber"]</FieldLabel>
                        <TextEdit Text="@Filter.QuoteNumber" TextChanged="@OnQuoteNumberChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["WorkSite"]</FieldLabel>
                        <TextEdit Text="@Filter.WorkSite" TextChanged="@OnWorkSiteChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["City"]</FieldLabel>
                        <TextEdit Text="@Filter.City" TextChanged="@OnCityChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["OrganizationProperty"]</FieldLabel>
                        <TextEdit TextChanged="@OnOrganizationPropertyChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["ContactProperty"]</FieldLabel>
                        <TextEdit TextChanged="@OnContactPropertyChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["PhoneInfo"]</FieldLabel>
                        <TextEdit TextChanged="@OnPhoneInfoChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MailInfo"]</FieldLabel>
                        <TextEdit TextChanged="@OnMailInfoChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinDiscount"]</FieldLabel>
                        <NumericEdit TValue="decimal?" 
             Value="@Filter.DiscountMin"
             ValueChanged="@OnDiscountMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxDiscount"]</FieldLabel>
                        <NumericEdit TValue="decimal?" 
             Value="@Filter.DiscountMax"
             ValueChanged="@OnDiscountMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Description"]</FieldLabel>
                        <TextEdit Text="@Filter.Description" TextChanged="@OnDescriptionChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Status"]</FieldLabel>
                        <Select TValue="Status?"
		SelectedValue="@Filter.Status"
		SelectedValueChanged="@OnStatusChangedAsync">

<SelectItem></SelectItem>

@foreach(Status value in Enum.GetValues(typeof(Status)))
{
	<SelectItem Value="value">
		@value
	</SelectItem>
}

</Select>                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["IdentityUser"]</FieldLabel>
                        <Select TValue="Guid?"
		SelectedValue="@Filter.AgentId"
		SelectedValueChanged="@OnAgentIdChangedAsync">

<SelectItem></SelectItem>

@foreach(var item in IdentityUsersCollection)
{
	<SelectItem TValue="Guid?" Value="@item.Id">
		@item.DisplayName
	</SelectItem>
}

</Select>                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Contact"]</FieldLabel>
                        <Select TValue="Guid?"
		SelectedValue="@Filter.ContactId"
		SelectedValueChanged="@OnContactIdChangedAsync">

<SelectItem></SelectItem>

@foreach(var item in ContactsCollection)
{
	<SelectItem TValue="Guid?" Value="@item.Id">
		@item.DisplayName
	</SelectItem>
}

</Select>                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Organization"]</FieldLabel>
                        <Select TValue="Guid?"
		SelectedValue="@Filter.OrganizationId"
		SelectedValueChanged="@OnOrganizationIdChangedAsync">

<SelectItem></SelectItem>

@foreach(var item in OrganizationsCollection)
{
	<SelectItem TValue="Guid?" Value="@item.Id">
		@item.DisplayName
	</SelectItem>
}

</Select>                       
                    </Field>
                </Column>
            </Row>

        </div>


    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>
        <DataGrid TItem="RequestForQuotationWithNavigationPropertiesDto"
                  Data="RequestForQuotationList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <DataGridColumns>

                <DataGridColumn TItem="RequestForQuotationWithNavigationPropertiesDto"
                                Field="RequestForQuotation.OrganizationId"
                                Caption="@L["Organization"]">
                    <DisplayTemplate>
                        @(context?.RequestForQuotation.OrganizationId != null ? Organizations.FirstOrDefault(org => org.Id == context?.RequestForQuotation.OrganizationId)?.Name : null)
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="RequestForQuotationWithNavigationPropertiesDto"
                                Field="RequestForQuotation.ContactId"
                                Caption="@L["Contact"]">
                    <DisplayTemplate>
                        @(context?.RequestForQuotation.ContactId != null ? Contacts.FirstOrDefault(contact => contact.Id == context?.RequestForQuotation.ContactId)?.ToStringNameSurname() : null)
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="RequestForQuotationWithNavigationPropertiesDto"
                                Field="RequestForQuotation.AgentId"
                                Caption="@L["Agent"]">
                    <DisplayTemplate>
                        @(context?.RequestForQuotation.AgentId != null ? Agents.FirstOrDefault(agent => agent.Id == context?.RequestForQuotation.AgentId)?.Name : null)
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="RequestForQuotationWithNavigationPropertiesDto"
                                Field="RequestForQuotation.QuoteNumber"
                                Caption="@L["QuoteNumber"]">
                </DataGridColumn>

                <DataGridColumn TItem="RequestForQuotationWithNavigationPropertiesDto"
                                Field="RequestForQuotation.WorkSite"
                                Caption="@L["WorkSite"]">
                </DataGridColumn>

                <DataGridColumn TItem="RequestForQuotationWithNavigationPropertiesDto"
                                Field="RequestForQuotation.City"
                                Caption="@L["City"]">
                </DataGridColumn>

                <DataGridColumn TItem="RequestForQuotationWithNavigationPropertiesDto"
                                Field="RequestForQuotation.Phones"
                                Caption="@L["Phone"]">
                </DataGridColumn>

                <DataGridColumn TItem="RequestForQuotationWithNavigationPropertiesDto"
                                Field="RequestForQuotation.Emails"
                                Caption="@L["Email"]">
                </DataGridColumn>
            </DataGridColumns>


            <RowOverlayTemplate >
                <Div id="@context.Item.RequestForQuotation.Id" class="justify-content-start bg-transparent">
                    <Button Color="Color.Primary" Size="Size.ExtraSmall"
                            Visibility="@((CanEditRequestForQuotation) ? Visibility.Visible : Visibility.Invisible)"
                            Clicked="() => OpenEditRequestForQuotationPageAsync(context.Item)">
                        <Icon Name="IconName.Eye" IconSize="IconSize.ExtraSmall"/>
                    </Button>
                    <Button Color="Color.Primary" Size="Size.ExtraSmall"
                            Visibility="@((CanEditRequestForQuotation) ? Visibility.Visible : Visibility.Invisible)"
                            Clicked="async () => await OpenEditRequestForQuotationModalAsync(context.Item)">
                        <Icon Name="IconName.Edit" IconSize="IconSize.ExtraSmall"/>
                    </Button>
                    <Button Color="Color.Secondary" Size="Size.ExtraSmall"
                            Visibility="@((CanDeleteRequestForQuotation) ? Visibility.Visible : Visibility.Invisible)"
                            Clicked="async () => await DeleteRequestForQuotationAsync(context.Item)">
                        <Icon Name="IconName.Delete" IconSize="IconSize.ExtraSmall"/>
                    </Button>
                </Div>
            </RowOverlayTemplate>
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="EditRequestForQuotationModal"
       Closing="@EditRequestForQuotationModal.CancelClosingModalWhenFocusLost"
       Animated="true"
       RenderMode="ModalRenderMode.LazyReload">
    <ModalContent Centered="true" Size="@ModalSize.ExtraLarge">
        <ModalHeader>
            <ModalTitle>@L["Update"] - @L["QuoteNumber"]-@RequestForQuotationInput.QuoteNumber</ModalTitle>
            <CloseButton Clicked="CloseEditRequestForQuotationModalAsync" />
        </ModalHeader>
        <ModalBody>
            <RequestForQuotationInput
                DisplayReadOnly="true"
                RequestForQuotation="@RequestForQuotationInput"
                OnRequestForQuotationSaved="UpdateRequestForQuotationAsync"
                OnRequestForQuotationCancel="CloseEditRequestForQuotationModalAsync">

            </RequestForQuotationInput>
        </ModalBody>
        <ModalFooter>
        </ModalFooter>
    </ModalContent>
</Modal>
