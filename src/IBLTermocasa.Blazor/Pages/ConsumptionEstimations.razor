

@page "/consumption-estimations"

@attribute [Authorize(IBLTermocasaPermissions.ConsumptionEstimations.Default)]
@using IBLTermocasa.Blazor.Components.Product
@using IBLTermocasa.Common
@using IBLTermocasa.ConsumptionEstimations
@using IBLTermocasa.Localization
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using IBLTermocasa.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.Http.Client
@using Position = MudBlazor.Position
@using MudBlazor
@inherits IBLTermocasaComponentBase
@inject IConsumptionEstimationsAppService ConsumptionEstimationsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<IBLTermocasaResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["ConsumptionEstimations"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
@*<Card>
    <CardBody>

        <Form id="ConsumptionEstimationSearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Filter.FilterText"
                              Autofocus="true"
                              Placeholder="@L["Search"]">
                    </TextEdit>
                </Addon>
                <Addon AddonType="AddonType.End">
                    <SubmitButton Form="ConsumptionEstimationSearchForm" Clicked="GetConsumptionEstimationsAsync">
                        <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                    </SubmitButton>
                </Addon>
            </Addons>
        </Form>
        
        <Row Class="mt-3 mb-3"> 
            <div class="col-md-12">
                <a href="javascript:;" class="text-decoration-none" @onclick="() => ShowAdvancedFilters = !ShowAdvancedFilters">@L["SeeAdvancedFilters"]</a>
            </div>
        </Row>
        
        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["ConsumptionProduct"]</FieldLabel>
                        <TextEdit Text="@Filter.ConsumptionProduct" TextChanged="@OnConsumptionProductChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["ConsumptionWork"]</FieldLabel>
                        <TextEdit Text="@Filter.ConsumptionWork" TextChanged="@OnConsumptionWorkChangedAsync" />                       
                    </Field>
                </Column>
            </Row>

        </div>


    </CardBody>
</Card>*@

@* ************************* DATA GRID ************************* *@
<MudForm   @ref="formConsumptionEstimation"
           IsValid=" successValidationConsumptionEstimation"
           Errors="errorsValidationConsumptionEstimation">
    <MudGrid>
        <MudItem xs="12" sm="4">
            @* ************************* Lista di prodotti sulla sinistra ************************* *@
            <MudPaper MaxHeight="600" Elevation="8">
                <MudText Align="Align.Center" Typo="Typo.h5" Class="p-3"
                         Style="box-shadow: 0px 2px #cdcdcd;">@L["Products List"]</MudText>
                <MudList Clickable="true" Style="overflow-y: auto;" >
                    @foreach (var product in ProductsList)
                    {
                        <MudListItem OnClick="() => OnClickSelectProduct(product)"
                                     Text="@product.DisplayName">
                        </MudListItem>
                    }
                </MudList>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="8">
            <MudPaper Elevation="8">
                <MudTabs Outlined="true" Position="Position.Top" Rounded="true" Border="true"
                         ApplyEffectsToContainer="true" PanelClass="pa-2">
                    <MudTabPanel Text="@L["ConsumptionComponent"]">
                        <MudPaper Elevation="0">
                            <MudTreeView T="PlaceHolderTreeItemData" Hover
                                         @ref="ProductMudTreeView" Items="TreeItems" MultiSelection="false"
                                         @bind-SelectedValues="SelectedValues"
                                         SelectionMode="@SelectionMode.SingleSelection">
                                <ItemTemplate>
                                    <MudTreeViewItem @bind-Expanded="@context.IsExpanded" 
                                                     Items="@context.TreeItems"  
                                                     Icon="@context.Icon" 
                                                     LoadingIconColor="MudBlazor.Color.Info"
                                                     Text="@context.CodeAndName"/>
                                </ItemTemplate>
                            </MudTreeView>
                        </MudPaper>
                        <MudPaper Elevation="0">
                            <MudList>
                                @foreach (var item in Product.ProductComponents)
                                {
                                    <MudListItem OnClick="() => SelectedProductComponent = item">
                                        <MudText Typo="Typo.h6">@item.Code - @item.Name</MudText>
                                        <MudTextField T="string" @bind-Value="@(Formulas[item.Code])" Label="@L["Formula"]"
                                                      @onclick="() => OnSelectedFormula(item)"/>
                                    </MudListItem>
                                }
                            </MudList>
                        </MudPaper>
                    </MudTabPanel>
                    <MudTabPanel Text="@L["ConsumptionProfessionalProfile"]">

                    </MudTabPanel>
                </MudTabs>
            </MudPaper>
        </MudItem>
        @*<MudItem xs="12" sm="8">
            <MudPaper Class="pa-4">
                $1$ ************************* Tab  on right side ************************* #1#
                <MudBlazor.MudTabs Outlined="true" MudBlazor.Position="@Position" Rounded="true" Border="true"
                                   ApplyEffectsToContainer="true" Class="mt-8" PanelClass="pa-2">
                    $1$ ************************* Tab Components on right side ************************* #1#
                    <MudBlazor.MudTabPanel Text="@L["Components"]">
                        <MudPaper>

                            <MudDataGrid @ref="ProductComponentMudDataGrid" T="ProductComponentDto" Items="@Product.ProductComponents" ReadOnly="false" EditMode="MudBlazor.DataGridEditMode.Cell"
                                         EditTrigger="DataGridEditTrigger.OnRowClick" CommittedItemChanges="@ProductComponentCommittedItemChanges"
                                         Bordered="true" Dense="true" Filterable="false" SortMode="SortMode.None">
                                <Columns>
                                    <PropertyColumn Property="x => x.Order" Title="@L["Order"]" IsEditable="true" Sortable="false" Filterable="false">
                                    </PropertyColumn>
                                    <PropertyColumn Property="x => x.Code" IsEditable="true" Title="@L["Code"]" Sortable="false" Filterable="false">
                                        <EditTemplate>
                                            <MudTextField @bind-Value="context.Item.Code"/>
                                        </EditTemplate>
                                    </PropertyColumn>
                                    <PropertyColumn Property="x => x.Name" IsEditable="true" Title="@L["Name"]" Sortable="false" Filterable="false">
                                        <EditTemplate>
                                            <MudTextField @bind-Value="context.Item.Name"/>
                                        </EditTemplate>
                                    </PropertyColumn>
                                    <PropertyColumn Property="x => x.Mandatory" Title="@L["Mandatory"]" Sortable="false" Filterable="false">
                                        <EditTemplate>
                                            <MudCheckBox T="bool" @bind-Value="context.Item.Mandatory" Color="MudBlazor.Color.Success"/>
                                        </EditTemplate>
                                    </PropertyColumn>
                                    <PropertyColumn Property="x => x.ConsumptionCalculation" Title="@L["Consumption"]" Sortable="false" Filterable="false">
                                        <EditTemplate >
                                            @if(context.Item.ConsumptionCalculation.IsNullOrWhiteSpace())
                                            {
                                            <MudIconButton Icon="@Icons.Material.Filled.Warning" Color="MudBlazor.Color.Warning"/>
                                            }else{
                                            <MudIconButton Icon="@Icons.Material.Filled.Check" Color="MudBlazor.Color.Success"/>
                                            }
                                        </EditTemplate>
                                    </PropertyColumn>
                                    <PropertyColumn Property="x => x.ComponentId" Sortable="false" Filterable="false">
                                        <HeaderTemplate>
                                            <MudIconButton Size="@MudBlazor.Size.Small" Icon="@Icons.Material.Filled.AddTask" OnClick="AddComponentAsync"></MudIconButton>
                                        </HeaderTemplate>
                                        <EditTemplate>
                                            <MudIconButton Size="@MudBlazor.Size.Small" Icon="@Icons.Material.Filled.Delete" OnClick="() => DeleteProductComponentAsync(context.Item)"/>
                                        </EditTemplate>
                                    </PropertyColumn>
                                </Columns>
                            </MudDataGrid>
                        </MudPaper>
                    </MudBlazor.MudTabPanel>
                    $1$ ************************* Tab Products on right side ************************* #1#
                    <MudBlazor.MudTabPanel Text="@L["Products"]">
                        <MudDataGrid T="SubProductDto"  @ref="SubProductMudDataGrid" Items="@Product.SubProducts" ReadOnly="false" EditMode="MudBlazor.DataGridEditMode.Cell"
                                     EditTrigger="DataGridEditTrigger.OnRowClick" CommittedItemChanges="@SubProductDtoCommittedItemChanges"
                                     Bordered="true" Dense="true" Filterable="false" SortMode="SortMode.None">
                            <Columns>
                                <PropertyColumn Property="x => x.Order" Title="@L["Order"]" >
                                    <EditTemplate>
                                        <MudNumericField @bind-Value="context.Item.Order"  Min="1" Max="(Product.SubProducts.Count + 1)" />
                                    </EditTemplate>
                                </PropertyColumn>
                                <PropertyColumn Property="x => x.Code" IsEditable="true" Title="@L["Code"]" Sortable="false" Filterable="false">
                                    <EditTemplate>
                                        <MudTextField @bind-Value="context.Item.Code"/>
                                    </EditTemplate>
                                </PropertyColumn>
                                <PropertyColumn Property="x => x.Name" IsEditable="true" Title="@L["Name"]">
                                    <EditTemplate>
                                        <MudTextField @bind-Value="context.Item.Name" />
                                    </EditTemplate>
                                </PropertyColumn>
                                <PropertyColumn Property="x => x.IsSingleProduct"  Title="@L["IsSingleProduct"]">
                                    <EditTemplate>
                                        <MudCheckBox T="bool" @bind-Value="context.Item.IsSingleProduct" />
                                    </EditTemplate>
                                </PropertyColumn>
                                <PropertyColumn Property="x => x.Mandatory"  Title="@L["Mandatory"]">
                                    <EditTemplate>
                                        <MudCheckBox T="bool" @bind-Value="context.Item.Mandatory" />
                                    </EditTemplate>
                                </PropertyColumn>
                                <PropertyColumn Property="x => x.Id" Sortable="false" Filterable="false">
                                    <HeaderTemplate>
                                        <MudIconButton Size="@MudBlazor.Size.Small" Icon="@Icons.Material.Filled.AddTask" OnClick="AddSubProductAsync"></MudIconButton>
                                    </HeaderTemplate>
                                    <EditTemplate>
                                        <MudIconButton Size="@MudBlazor.Size.Small" Icon="@Icons.Material.Filled.Delete" OnClick="() => DeleteSubProductAsync(context.Item)"/>
                                    </EditTemplate>
                                </PropertyColumn>
                            </Columns>
                        </MudDataGrid>
                    </MudBlazor.MudTabPanel>
                    $1$ ************************* Tab QuestionTemplate on right side ************************* #1#
                    <MudBlazor.MudTabPanel Text="@L["QuestionTemplates"]">
                        <MudDataGrid T="ProductQuestionTemplateDto" @ref="ProductQuestionTemplateMudDataGrid" Items="@Product.ProductQuestionTemplates" ReadOnly="false" EditMode="MudBlazor.DataGridEditMode.Cell"
                                     EditTrigger="DataGridEditTrigger.OnRowClick" CommittedItemChanges="@QuestionTemplateDtoCommittedItemChanges"
                                     Bordered="true" Dense="true" Filterable="false" SortMode="SortMode.None">
                            <Columns>
                                <PropertyColumn Property="x => x.Order" Title="@L["Order"]" >
                                    <EditTemplate>
                                        <MudNumericField @bind-Value="context.Item.Order"  Min="1" Max="(Product.SubProducts.Count + 1)" />
                                    </EditTemplate>
                                </PropertyColumn>
                                <PropertyColumn Property="x => x.Code" IsEditable="true" Title="@L["Code"]" Sortable="false" Filterable="false">
                                    <EditTemplate>
                                        <MudTextField @bind-Value="context.Item.Code"/>
                                    </EditTemplate>
                                </PropertyColumn>
                                <PropertyColumn Property="x => x.Name" IsEditable="true" Title="@L["Name"]">
                                    <EditTemplate>
                                        <MudTextField @bind-Value="context.Item.Name"/>
                                    </EditTemplate>
                                </PropertyColumn>
                                <PropertyColumn Property="x => x.Mandatory"  Title="@L["Mandatory"]">
                                    <EditTemplate>
                                        <MudCheckBox T="bool" @bind-Value="context.Item.Mandatory" />
                                    </EditTemplate>
                                </PropertyColumn>
                                <PropertyColumn Property="x => x.QuestionTemplateId" Sortable="false" Filterable="false">
                                    <HeaderTemplate>
                                        <MudIconButton Size="@MudBlazor.Size.Small" Icon="@Icons.Material.Filled.AddTask" OnClick="AddQuestionTemplateAsync"></MudIconButton>
                                    </HeaderTemplate>
                                    <EditTemplate>
                                        <MudIconButton Size="@MudBlazor.Size.Small" Icon="@Icons.Material.Filled.Delete" OnClick="() => DeleteProductQuestionTemplateAsync(context.Item)"/>
                                    </EditTemplate>
                                </PropertyColumn>
                            </Columns>
                        </MudDataGrid>
                    </MudBlazor.MudTabPanel>
                </MudBlazor.MudTabs>
            </MudPaper>
        </MudItem>*@
    </MudGrid>
</MudForm> 
<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider />