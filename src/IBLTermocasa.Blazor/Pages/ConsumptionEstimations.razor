

@page "/consumption-estimations"

@attribute [Authorize(IBLTermocasaPermissions.ConsumptionEstimations.Default)]
@using IBLTermocasa.Blazor.Components.Product
@using IBLTermocasa.Common
@using IBLTermocasa.ConsumptionEstimations
@using IBLTermocasa.Localization
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using IBLTermocasa.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.Http.Client
@using Position = MudBlazor.Position
@using MudBlazor
@inherits IBLTermocasaComponentBase
@inject IConsumptionEstimationsAppService ConsumptionEstimationsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<IBLTermocasaResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["ConsumptionEstimations"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

<MudPaper Style="overflow:hidden; position:relative; height: 100%;" MinHeight="48 0px">
    <MudDrawerContainer Class="mud-height-full" Style="height: 100%;">
        <MudDrawer @bind-Open="@_open" Elevation="0" Variant="@DrawerVariant.Persistent" 
                   Color="MudBlazor.Color.Transparent" Width="30%" Height="100%"  Style="min-height: 350px">
            <MudDrawerHeader Style="min-width: 300px; width: 300px;">
                <MudText Align="Align.Center" 
                         Style="box-shadow: 0px 2px #cdcdcd;">@L["Products List"]</MudText>
            </MudDrawerHeader>
            <MudPaper Style="overflow:hidden; position:relative; height: 100%;" MinHeight="400px">
                <MudList Clickable="true" Style="overflow-y: auto; min-width: 350px;" >
                    @foreach (var product in ProductsList)
                    {
                        <MudListItem OnClick="() => OnClickSelectProduct(product)"
                                     Text="@product.DisplayName">
                        </MudListItem>
                    }
                </MudList>
            </MudPaper>
        </MudDrawer>
        <MudDrawer @bind-Open="@_openEnd" Fixed="false" Anchor="MudBlazor.Anchor.End" Elevation="0" 
                   Variant="@DrawerVariant.Persistent"
                   Width="30%" Height="100%"
        >
            <MudDrawerHeader >
                <MudText Align="Align.Center"
                         Style="box-shadow: 0px 2px #cdcdcd;">Variabili Prodotto</MudText>
            </MudDrawerHeader>
            <MudPaper Elevation="0" MinHeight="400px">
                <MudTreeView T="PlaceHolderTreeItemData" Hover
                             @ref="ProductMudTreeView" Items="TreeItems" MultiSelection="false"
                             @bind-SelectedValues="SelectedValues"
                             Style="min-width: 350px;"
                             SelectionMode="@SelectionMode.SingleSelection">
                    <ItemTemplate>
                        <MudTreeViewItem @bind-Expanded="@context.IsExpanded"
                                         Items="@context.TreeItems"
                                         Icon="@context.Icon"
                                         LoadingIconColor="MudBlazor.Color.Info"
                                         Text="@context.CodeAndName"
                                         OnDoubleClick="() => OnDoubleClickSelectConsumptionComponent(context)"/>
                    </ItemTemplate>
                </MudTreeView>
            </MudPaper>
        </MudDrawer>
        
        <div class="d-flex justify-content-start align-left mud-height-full">
            <MudPaper Elevation="25" Class="w-100">
                <MudToolBar>
                    <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="MudBlazor.Color.Info" Class="mr-5" OnClick="@ToggleDrawer"/>
                    <MudIconButton Icon="@Icons.Material.Outlined.Save" Color="MudBlazor.Color.Primary" Class="mr-5" OnClick="@OnClickSaveConsumptionComponent"/>
                    <MudSpacer /><MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="MudBlazor.Color.Info" Class="mr-5" OnClick="@ToggleEndDrawer"/>
                    
                </MudToolBar>
                <MudTabs Outlined="true" Position="Position.Top" Rounded="true" Border="true"
                         ApplyEffectsToContainer="true" PanelClass="pa-2 " Class="w-100">
                    <MudTabPanel Text="@L["ConsumptionComponent"]">
                        @if (SelectedConsumptionEstimation != null)
                        {
                            <MudPaper Elevation="0">
                                <MudList >
                                    @foreach (var item in SelectedConsumptionEstimation.ConsumptionProduct)
                                    {
                                        <MudListItem>
                                            <MudText Typo="Typo.h6">@item.ConsumptionComponentCodeAndName - {@item.ConsumptionComponentLabel}</MudText>
                                            <MudTextField T="string" @bind-Value="@item.ConsumptionComponentFormula" Label="@L["Formula"]" OnBlur="() => OnBlurConsumptionComponentFormula(item)"/>
                                        </MudListItem>
                                    }
                                </MudList>
                            </MudPaper>
                        }
                    </MudTabPanel>
                    <MudTabPanel Text="@L["ConsumptionProfessionalProfile"]">
                    </MudTabPanel>
                </MudTabs>
            </MudPaper>
        </div>
    </MudDrawerContainer>
</MudPaper>
<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider />

@code
{
    private bool _open = true;

    private bool _openEnd = false;
    
    private void ToggleDrawer()
    {
        _open = !_open;
    }
    private void ToggleEndDrawer()
    {
        _openEnd = !_openEnd;
    }
}