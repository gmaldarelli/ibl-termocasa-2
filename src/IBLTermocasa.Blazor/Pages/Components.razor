

@page "/components"

@attribute [Authorize(IBLTermocasaPermissions.Components.Default)]
@using IBLTermocasa.Components
@using IBLTermocasa.Localization
@using IBLTermocasa.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using IBLTermocasa.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using ComponentItemDto = IBLTermocasa.Components.ComponentItemDto
@using Volo.Abp.Http.Client
@using Size = MudBlazor.Size
@using Color = MudBlazor.Color
@using MudBlazor
@inherits IBLTermocasaComponentBase
@inject IComponentsAppService ComponentsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<IBLTermocasaResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Components"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

<MudGrid>
    <MudItem xs="12" sm="6">
        @* ************************* Main Info on left side ************************* *@
        <MudPaper Class="pa-4">
            <MudDataGrid @ref="ComponentMudDataGrid" T="ComponentDto" 
                                   Items="@ComponentList" ReadOnly="false" 
                                   EditMode="MudBlazor.DataGridEditMode.Cell" 
                                   Hover="true" SelectedItemChanged="OnSelectedItemChanged"
                                   EditTrigger="DataGridEditTrigger.Manual"  
                                   Bordered="true" Dense="true" Filterable="false" SortMode="SortMode.Single"
                                   CommittedItemChanges="@OnCommittedItemChanges">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">@L["Components"]</MudText>
                    <MudSpacer />
                    <Button Color="Blazorise.Color.Primary" @onclick="CreateComponentAsync">@L["NewComponent"]</Button>
                </ToolBarContent>
                <Columns>
                    <PropertyColumn Property="x => x.Code" Title="@L["Code"]" IsEditable="true" Sortable="true" Filterable="true">
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.Name" Title="@L["Name"]" IsEditable="true" Sortable="true" Filterable="true">
                    </PropertyColumn>
                    <TemplateColumn>
                        <EditTemplate>
                            <MudIconButton Size="@Size.Small"
                                                     Icon="@Icons.Material.Filled.DeleteSweep"
                                                     OnClick="() => DeleteComponentAsync(context.Item)"/>
                        </EditTemplate>
                    </TemplateColumn>
                </Columns>
            </MudDataGrid>
        </MudPaper>
    </MudItem>

    <MudItem xs="12" sm="6">

        @* ************************* Main Info on right side ************************* *@
        <MudPaper Class="pa-4">
            <MudDataGrid @ref="ComponentItemMudDataGrid" T="ComponentItemDto" Items="@ComponentItemList" ReadOnly="false" EditMode="MudBlazor.DataGridEditMode.Cell" Hover="true"
                                   EditTrigger="DataGridEditTrigger.OnRowClick"
                                   Bordered="true" Dense="true" Filterable="false" SortMode="SortMode.Single">
                <ToolBarContent>
                    <MudText Typo="Typo.h6">@L["ComponentItems"]</MudText>
                    <MudSpacer />
                    <MudButton Disabled="@ComponentSelected" Color="Color.Primary" OnClick="OpenCreateComponentItemModalAsync">@L["NewComponentItem"]</MudButton>
                </ToolBarContent>
                <Columns>
                    <PropertyColumn Property="x => x.IsDefault" Title="@L["IsDefault"]" IsEditable="true" Sortable="true" Filterable="true">
                        <EditTemplate>
                            <MudCheckBox @bind-Checked="context.Item.IsDefault"/>
                        </EditTemplate>
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.MaterialCode" Title="@L["Code"]" IsEditable="false" Sortable="false" Filterable="false">
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.MaterialName" Title="@L["Name"]" IsEditable="false" Sortable="false" Filterable="false">
                    </PropertyColumn>
                    <PropertyColumn Property="x => x.Id" Sortable="false" Filterable="false">
                        <HeaderTemplate>
                            <MudSpacer></MudSpacer>
                        </HeaderTemplate>
                        <EditTemplate>
                            <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Filled.DeleteSweep" OnClick="() => DeleteComponentItemAsync(context.Item)"/>
                        </EditTemplate>
                    </PropertyColumn>
                </Columns>
                <NoRecordsContent>
                    <MudIcon Icon="MudIcons.Material.Filled.Warning" Size="Size.Large" Color="Color.Warning"/>
                    @if (ComponentMudDataGrid.SelectedItem == null)
                    {
                        <MudText>@L["NoDataSelected"]</MudText>
                    }
                </NoRecordsContent>
            </MudDataGrid>
        </MudPaper>
    </MudItem>
</MudGrid>

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider />

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateComponentModal" Closing="@CreateComponentModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
        <Form id="CreateComponentForm">
            <ModalHeader>
                <ModalTitle>@L["NewComponent"]</ModalTitle>
                <CloseButton Clicked="CloseCreateComponentModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewComponentValidations"
                             Mode="ValidationMode.Auto"
                             Model="@NewComponent"
                             ValidateOnLoad="false">
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Code"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewComponent.Code">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewComponent.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>




                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Blazorise.Color.Secondary"
                        Clicked="CloseCreateComponentModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateComponentForm" Clicked="CreateComponentAsync" />

            </ModalFooter>
        </Form>

    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditComponentModal" Closing="@EditComponentModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">

        <Form id="EditComponentForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditComponentModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingComponentValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingComponent"
                            ValidateOnLoad="false">


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Code"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingComponent.Code"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingComponent.Name"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Blazorise.Color.Secondary"
                        Clicked="CloseEditComponentModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditComponentForm" Clicked="UpdateComponentAsync" />

            </ModalFooter>
        </Form>

    </ModalContent>
</Modal>

@* ************************* ComponentItem: CREATE MODAL ************************* *@
<Modal @ref="CreateComponentItemModal" Closing="@CreateComponentItemModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
        <Form id="CreateComponentItemForm">
            <ModalHeader>
                <ModalTitle>@L["NewComponentItem"]</ModalTitle>
                <CloseButton Clicked="CloseCreateComponentItemModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewComponentItemValidations"
                             Mode="ValidationMode.Auto"
                             Model="@NewComponentItem"
                             ValidateOnLoad="false">
                     
                    
                    <Field>
                        <Check TValue="bool" @bind-Checked="@NewComponentItem.IsDefault" >@L["IsDefault"]</Check>
                    </Field>

                    <Field>
                        <FieldLabel>@L["Material"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@NewComponentItem.MaterialId">
                            @foreach (var material in MaterialsCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(material.Id)">
                                    @(material.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Blazorise.Color.Secondary"
                        Clicked="CloseCreateComponentItemModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateComponentItemForm" Clicked="CreateComponentItemAsync" />
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@* ************************* ComponentItem: EDIT MODAL ************************* *@
<Modal @ref="EditComponentItemModal" Closing="@EditComponentItemModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
        <Form id="EditComponentItemForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditComponentItemModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingComponentItemValidations"
                             Mode="ValidationMode.Auto"
                             Model="@EditingComponentItem"
                             ValidateOnLoad="false">
                     
                    
                    <Field>
                        <Check TValue="bool" @bind-Checked="@EditingComponentItem.IsDefault" >@L["IsDefault"]</Check>
                    </Field>

                    <Field>
                        <FieldLabel>@L["Material"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@EditingComponentItem.MaterialId">
                            @foreach (var material in MaterialsCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(material.Id)">
                                    @(material.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Blazorise.Color.Secondary"
                        Clicked="CloseEditComponentItemModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditComponentItemForm" Clicked="UpdateComponentItemAsync" />
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>