@page "/catalogs"

@attribute [Authorize(IBLTermocasaPermissions.Catalogs.Default)]
@using IBLTermocasa.Catalogs
@using IBLTermocasa.Localization
@using IBLTermocasa.Permissions
@using IBLTermocasa.Shared
@using Microsoft.AspNetCore.Authorization
@using MudBlazor
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using Volo.Abp.Http.Client
@using Button = Blazorise.Button
@using Color = MudBlazor.Color
@using Size = MudBlazor.Size
@inherits IBLTermocasaComponentBase
@inject ICatalogsAppService CatalogsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<IBLTermocasaResource> Lh
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@

<PageHeader Title="@L["Catalogs"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH AND DATA GRID ************************* *@

<MudDataGrid @ref="CatalogMudDataGrid"
             ServerData="LoadGridData"
             T="CatalogWithNavigationPropertiesDto"
             ReadOnly="false"
             Virtualize="true" FixedHeader="true"
             Hover="true"
             Bordered="false" Dense="false"
             Filterable="true" RowsPerPage="10"
             SortMode="SortMode.Multiple"
             Class="mud-data-grid-custom">
    <ToolBarContent>
        <MudTextField T="string" Placeholder="@L["Search"]" Adornment="Adornment.Start" Immediate="true" ValueChanged="arg => SearchAsync(arg)" DebounceInterval="1000"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-2">
        </MudTextField>
        <MudSpacer/>
        <MudButton Class="mr-2" StartIcon="@Icons.Material.Outlined.FileDownload" Size="Size.Small" Variant="Variant.Filled" Color="@Color.Primary" OnClick="DownloadAsExcelAsync">@L["ExportToExcel"]</MudButton>
        <MudButton StartIcon="@Icons.Material.Filled.Add" Size="Size.Small" Variant="Variant.Filled" Color="@Color.Primary" OnClick="OpenCreateCatalogModalAsync">@L["NewCatalog"]</MudButton>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x.Catalog.Name" Title="@L["Name"]"/>
        <PropertyColumn Property="x => x.Catalog.From" Title="@L["From"]"/>
        <PropertyColumn Property="x => x.Catalog.To" Title="@L["To"]"/>
        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
                <MudTooltip Inline="true" Text="@L["Modify"]" Arrow="true" Placement="MudBlazor.Placement.Top">
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.RemoveRedEye" OnClick="@(() => OpenEditCatalogModalAsync(context.Item))"/>
                </MudTooltip>
                <MudTooltip Inline="true" Text="@L["Remove"]" Arrow="true" Placement="MudBlazor.Placement.Top">
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Remove" OnClick="() => DeleteCatalogAsync(context.Item)"/>
                </MudTooltip>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    <PagerContent>
        <MudDataGridPager T="CatalogWithNavigationPropertiesDto"/>
    </PagerContent>
</MudDataGrid>
<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateCatalogModal" Closing="@CreateCatalogModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">

        <Form id="CreateCatalogForm">
            <ModalHeader>
                <ModalTitle>@L["NewCatalog"]</ModalTitle>
                <CloseButton Clicked="CloseCreateCatalogModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Tabs SelectedTab="@SelectedCreateTab" SelectedTabChanged="@OnSelectedCreateTabChanged">
                    <Items>
                        <Tab Name="catalog-create-tab">@L["Catalog"].Value</Tab>
                        <Tab Name="products-create-tab">@L["Products"].Value</Tab>
                    </Items>
                    <Content>
                        <Validations @ref="@NewCatalogValidations"
                                     Mode="ValidationMode.Auto"
                                     Model="@NewCatalog"
                                     ValidateOnLoad="false">
                            <TabPanel Name="catalog-create-tab">

                                <Validation MessageLocalizer="@Lh.Localize">
                                    <Field>
                                        <FieldLabel>@L["Name"] *</FieldLabel>
                                        <TextEdit @bind-Text="@NewCatalog.Name">
                                            <Feedback>
                                                <ValidationError/>
                                            </Feedback>
                                        </TextEdit>
                                    </Field>
                                </Validation>


                                <Validation MessageLocalizer="@Lh.Localize">
                                    <Field>
                                        <FieldLabel>@L["From"]</FieldLabel>
                                        <DateEdit TValue="DateTime" InputMode="DateInputMode.DateTime" @bind-Date="@NewCatalog.From">
                                            <Feedback>
                                                <ValidationError/>
                                            </Feedback>
                                        </DateEdit>
                                    </Field>
                                </Validation>


                                <Validation MessageLocalizer="@Lh.Localize">
                                    <Field>
                                        <FieldLabel>@L["To"]</FieldLabel>
                                        <DateEdit TValue="DateTime" InputMode="DateInputMode.DateTime" @bind-Date="@NewCatalog.To">
                                            <Feedback>
                                                <ValidationError/>
                                            </Feedback>
                                        </DateEdit>
                                    </Field>
                                </Validation>


                                <Validation MessageLocalizer="@Lh.Localize">
                                    <Field>
                                        <FieldLabel>@L["Description"]</FieldLabel>
                                        <TextEdit @bind-Text="@NewCatalog.Description">
                                            <Feedback>
                                                <ValidationError/>
                                            </Feedback>
                                        </TextEdit>
                                    </Field>
                                </Validation>


                            </TabPanel>
                            <TabPanel Name="products-create-tab">

                                <Blazorise.Row>
                                    <Column ColumnSize="ColumnSize.Is9">
                                        <Field>

                                            <Autocomplete Data="@Products"
                                                          TItem="LookupDto<Guid>"
                                                          TValue="string"
                                                          TextField="@((item) => item.DisplayName)"
                                                          ValueField="@((item) => item.Id.ToString())"
                                                          SearchChanged="@GetProductLookupAsync"
                                                          @bind-SelectedValue="@SelectedProductId"
                                                          @bind-SelectedText="@SelectedProductText"
                                                          Placeholder="&#8212;"/>
                                        </Field>
                                    </Column>

                                    <Column ColumnSize="ColumnSize.Is3">
                                        <Button Color="Blazorise.Color.Info" TextColor="TextColor.White" Clicked="AddProduct">
                                            <Icon class="fa fa-plus"></Icon> @L["Add"]
                                        </Button>
                                    </Column>
                                </Blazorise.Row>
                                @if (SelectedProducts.Any())
                                {
                                    <Table striped-rows="true" responsive-sm="true" class="mt-2">
                                        <TableHeader>
                                            <TableHeaderCell>
                                                <Span class="float-start">@L["Name"]</Span>
                                            </TableHeaderCell>
                                        </TableHeader>
                                        <TableBody>
                                            @foreach (var product in SelectedProducts)
                                            {
                                                <TableRow>
                                                    <TableRowCell>
                                                        <Span class="float-start">@product.DisplayName</Span>
                                                    </TableRowCell>
                                                    <TableRowCell>
                                                        <span class="btn btn-danger btn-sm float-end"
                                                              @onclick="() => SelectedProducts.RemoveAll(s => s.Id == product.Id)">
                                                            <Icon Class="fa fa-trash"></Icon>
                                                        </span>
                                                    </TableRowCell>
                                                </TableRow>
                                            }
                                        </TableBody>
                                    </Table>
                                }
                            </TabPanel>
                        </Validations>
                    </Content>
                </Tabs>
            </ModalBody>
            <ModalFooter>
                <Button Color="Blazorise.Color.Secondary"
                        Clicked="CloseCreateCatalogModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateCatalogForm" Clicked="CreateCatalogAsync"/>

            </ModalFooter>
        </Form>

    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditCatalogModal" Closing="@EditCatalogModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">

        <Form id="EditCatalogForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditCatalogModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Tabs SelectedTab="@SelectedEditTab" SelectedTabChanged="@OnSelectedEditTabChanged">
                    <Items>
                        <Tab Name="catalog-edit-tab">@L["Catalog"].Value</Tab>

                        <Tab Name="products-edit-tab">@L["Products"].Value</Tab>
                    </Items>
                    <Content>
                        <Validations @ref="@EditingCatalogValidations"
                                     Mode="ValidationMode.Auto"
                                     Model="@EditingCatalog"
                                     ValidateOnLoad="false">
                            <TabPanel Name="catalog-edit-tab">

                                <Validation MessageLocalizer="@Lh.Localize">
                                    <Field>
                                        <FieldLabel>@L["Name"] *</FieldLabel>
                                        <TextEdit @bind-Text="@EditingCatalog.Name">
                                            <Feedback>
                                                <ValidationError/>
                                            </Feedback>
                                        </TextEdit>
                                    </Field>
                                </Validation>


                                <Validation MessageLocalizer="@Lh.Localize">
                                    <Field>
                                        <FieldLabel>@L["From"]</FieldLabel>
                                        <DateEdit TValue="DateTime" InputMode="DateInputMode.DateTime" @bind-Date="@EditingCatalog.From">
                                            <Feedback>
                                                <ValidationError/>
                                            </Feedback>
                                        </DateEdit>
                                    </Field>
                                </Validation>


                                <Validation MessageLocalizer="@Lh.Localize">
                                    <Field>
                                        <FieldLabel>@L["To"]</FieldLabel>
                                        <DateEdit TValue="DateTime" InputMode="DateInputMode.DateTime" @bind-Date="@EditingCatalog.To">
                                            <Feedback>
                                                <ValidationError/>
                                            </Feedback>
                                        </DateEdit>
                                    </Field>
                                </Validation>


                                <Validation MessageLocalizer="@Lh.Localize">
                                    <Field>
                                        <FieldLabel>@L["Description"]</FieldLabel>
                                        <TextEdit @bind-Text="@EditingCatalog.Description">
                                            <Feedback>
                                                <ValidationError/>
                                            </Feedback>
                                        </TextEdit>
                                    </Field>
                                </Validation>


                            </TabPanel>
                            <TabPanel Name="products-edit-tab">

                                <Blazorise.Row>
                                    <Column ColumnSize="ColumnSize.Is9">
                                        <Field>

                                            <Autocomplete Data="@Products"
                                                          TItem="LookupDto<Guid>"
                                                          TValue="string"
                                                          TextField="@((item) => item.DisplayName)"
                                                          ValueField="@((item) => item.Id.ToString())"
                                                          SearchChanged="@GetProductLookupAsync"
                                                          @bind-SelectedValue="@SelectedProductId"
                                                          @bind-SelectedText="@SelectedProductText"
                                                          Placeholder="&#8212;"/>
                                        </Field>
                                    </Column>

                                    <Column ColumnSize="ColumnSize.Is3">
                                        <Button Color="Blazorise.Color.Info" TextColor="TextColor.White" Clicked="AddProduct">
                                            <Icon class="fa fa-plus"></Icon> @L["Add"]
                                        </Button>
                                    </Column>
                                </Blazorise.Row>
                                @if (SelectedProducts.Any())
                                {
                                    <Table striped-rows="true" responsive-sm="true" class="mt-2">
                                        <TableHeader>
                                            <TableHeaderCell>
                                                <Span class="float-start">@L["Name"]</Span>
                                            </TableHeaderCell>
                                        </TableHeader>
                                        <TableBody>
                                            @foreach (var product in SelectedProducts)
                                            {
                                                <TableRow>
                                                    <TableRowCell>
                                                        <Span class="float-start">@product.DisplayName</Span>
                                                    </TableRowCell>
                                                    <TableRowCell>
                                                        <span class="btn btn-danger btn-sm float-end"
                                                              @onclick="() => SelectedProducts.RemoveAll(s => s.Id == product.Id)">
                                                            <Icon Class="fa fa-trash"></Icon>
                                                        </span>
                                                    </TableRowCell>
                                                </TableRow>
                                            }
                                        </TableBody>
                                    </Table>
                                }
                            </TabPanel>
                        </Validations>
                    </Content>
                </Tabs>
            </ModalBody>
            <ModalFooter>
                <Button Color="Blazorise.Color.Secondary"
                        Clicked="CloseEditCatalogModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditCatalogForm" Clicked="UpdateCatalogAsync"/>

            </ModalFooter>
        </Form>

    </ModalContent>
</Modal>