@inject NavigationManager NavigationManager
@inject AbpBlazorMessageLocalizerHelper<IBLTermocasaResource> LH
@inject IOrganizationsAppService OrganizationsAppService
@using IBLTermocasa.Common
@using IBLTermocasa.Localization
@using IBLTermocasa.Organizations
@using IBLTermocasa.Shared
@using IBLTermocasa.Types
@using Volo.Abp.AspNetCore.Components.Messages
@inject IUiMessageService UiMessageService
@using Volo.Abp.AspNetCore.Components.Web
@using EnumExtensions = IBLTermocasa.Types.EnumExtensions
@using MudBlazor
@using Color = MudBlazor.Color
@using Size = MudBlazor.Size
@using MudExtensions
@inherits IBLTermocasaComponentBase

<style>
    .loading-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        justify-content: center;
        align-items: center;
        background-color: rgba(255, 255, 255, 0.8);
        z-index: 9999;
    }
</style>


@if (_isLoading)
{
    <div class="loading-container" style="@(_isLoading ? "display: flex;" : "display: none;")">
        <MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large"/>
    </div>
}
else
{
    <MudGrid Class="mt-8">
        <MudItem xs="12" sm="3">
            <MudPaper>
                <MudCard Class="text-center border-bottom pb-3 mb-3">
                    <MudCardContent Class="d-flex justify-content-center">
                        <MudGrid>
                            <MudItem xs="12" sm="12" Class="d-flex justify-content-center">
                                <MudImage Width="200" Src="https://ht.ksdr1.net/wp-content/uploads/sites/3/2016/06/no-picture-available-icon-8.png" Class="d-flex justify-content-center img-fluid rounded-0"/>
                            </MudItem>
                            <MudItem xs="12" sm="12">
                                <MudDivider/>
                                <MudText Typo="Typo.h6">@OrganizationParameter.Name</MudText>
                                <MudText Typo="Typo.h6" Color="Color.Secondary">@L[$"Enum:OrganizationType.{EnumExtensions.GetDisplayName(OrganizationParameter.OrganizationType)}"]</MudText>
                                <MudText Typo="Typo.body2" Style="font-weight: bold" Color="Color.Tertiary">
                                    <MudLink Href="@GoogleMapsUrl" Target="_blank">
                                        <MudIcon Color="Color.Secondary" Icon="@Icons.Material.Filled.LocationOn"/>
                                    </MudLink>
                                    @(OrganizationParameter.BillingAddress.ResolveAddress())
                                </MudText>
                                <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled" Size="Size.Small">
                                    <MudButton>@L["SendMail"]</MudButton>
                                    <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown" Size="Size.Small">
                                        @foreach (var mailItem in OrganizationParameter.MailInfo.MailItems)
                                        {
                                            <MudMenuItem OnClick="@(() => mailToAction(mailItem))">@mailItem.Email</MudMenuItem>
                                        }
                                        @if (OrganizationParameter.MailInfo.MailItems.Count > 1)
                                        {
                                            <MudDivider/>
                                            <MudMenuItem OnClick="@(() => mailToAction(OrganizationParameter.MailInfo.MailItems))">@L["SendAtAll"]</MudMenuItem>
                                        }
                                    </MudMenu>
                                </MudButtonGroup>
                                <SocialBadge SocialInfo="@InternalOrganization.SocialInfo"/>
                                <MudText Typo="Typo.body2">@L["SourceType"]</MudText>
                                <MudText Typo="Typo.body2" Style="font-weight: bold">@L[$"Enum:SourceType.{EnumExtensions.GetDisplayName(OrganizationParameter.SourceType)}"]</MudText>
                                <MudText Typo="Typo.body2">@L["FirstSync"]</MudText>
                                <MudText Typo="Typo.body2" Style="font-weight: bold">
                                    @if (OrganizationParameter.SourceType == SourceType.SYSTEM)
                                    {
                                        @OrganizationParameter.CreationTime
                                    }
                                    else
                                    {
                                        @OrganizationParameter.FirstSync
                                    }
                                </MudText>
                                <MudText Typo="Typo.body2">@L["LastSync"]</MudText>
                                <MudText Typo="Typo.body2" Style="font-weight: bold">
                                    @if (OrganizationParameter.SourceType == SourceType.SYSTEM)
                                    {
                                        @OrganizationParameter.LastModificationTime
                                    }
                                    else
                                    {
                                        @OrganizationParameter.LastSync
                                    }
                                </MudText>
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="9">
            <MudPaper>
                <MudForm @ref="MudFormInternalOrganization"
                         Model="@InternalOrganization"
                         Errors="Errors"
                         Validation="Validations"
                         @bind-IsValid="@InternalOrganizationIsValid">
                    <MudGrid>
                        <MudItem sm="12" xs="12">
                            <MudExpansionPanels MultiExpansion="true">
                                <MudExpansionPanel @bind-Expanded="accordionItemMainInformationVisible">
                                    <TitleContent>
                                        <div class="d-flex">
                                            <MudIcon Icon="@Icons.Material.Filled.Info" class="mr-3" Color="Color.Info"/>
                                            <MudText>@L["MainInformation"]</MudText>
                                        </div>
                                    </TitleContent>
                                    <ChildContent>
                                        <MudStack Row="true" Class="align-content-start">
                                            <MudTextField @bind-Value="@InternalOrganization.Code" Label="@L["Code"]" Required="true"/>
                                            <MudTextField @bind-Value="@InternalOrganization.Name" Label="@L["Name"]" Required="true"/>
                                            <MudSelect T="OrganizationType" @bind-Value="@InternalOrganization.OrganizationType" Label="@L["OrganizationType"]">
                                                @foreach (var type in OrganizationTypes)
                                                {
                                                    <MudSelectItem Value="@type">@L[$"Enum:OrganizationType.{type}"]</MudSelectItem>
                                                }
                                            </MudSelect>
                                            <MudSelect T="Guid?" @bind-Value="@InternalOrganization.IndustryId" Label="@L["Industry"]">
                                                @foreach (var industry in Industries)
                                                {
                                                    <MudSelectItem T="Guid?" Value="@industry.Id">@industry.IndustryFullName</MudSelectItem>
                                                }
                                            </MudSelect>
                                        </MudStack>
                                        <MudStack Class="pt-3">
                                            <MudText Typo="Typo.body1" Color="Color.Secondary"><b>@L["Email"]</b></MudText>
                                            <MailInfoInput MailInfo="@InternalOrganization.MailInfo"/>
                                        </MudStack>
                                        <MudStack Class="pt-3">
                                            <MudText Typo="Typo.body1" Color="Color.Secondary"><b>@L["Phone"]</b></MudText>
                                            <PhoneInfoInput PhoneInfo="@InternalOrganization.PhoneInfo"/>
                                        </MudStack>
                                        <MudStack Class="pt-3">
                                            <MudSelectExtended
                                                MultiSelection="true"
                                                T="Guid"
                                                MultiSelectionTextFunc="@(guids => guids.Count > 1 ? $"{guids.Count} {L["Contacts"]}" : guids.Count == 1 ? $"{ListAllContacts.Find(contactProperty => contactProperty.Id == guids.First()).Name}" : L["NoContacts"])"
                                                SelectedValues="@SelectedContactGuids"
                                                SelectedValuesChanged="@(contacts => SelectedGuidsChanged(contacts))"
                                                Label="@L["AssociatedContacts"]"
                                                AnchorOrigin="Origin.BottomCenter">
                                                @foreach (var item in ListContactGuids)
                                                {
                                                    <MudSelectItemExtended T="Guid" Value="@item" Text="@(ListAllContacts.Find(cp => cp.Id == item).Name)"/>
                                                }
                                            </MudSelectExtended>
                                        </MudStack>
                                        <MudStack>
                                            <MudTextField @bind-Value="@InternalOrganization.Notes" Label="@L["Notes"]" Required="false" Lines="3" MaxLength="1000"/>
                                        </MudStack>
                                    </ChildContent>
                                </MudExpansionPanel>
                                <MudExpansionPanel @bind-Expanded="accordionItemAddressesInformationVisible">
                                    <TitleContent>
                                        <div class="d-flex">
                                            <MudIcon Icon="@Icons.Material.Filled.Info" class="mr-3" Color="Color.Info"/>
                                            <MudText>@L["AddressesInformation"]</MudText>
                                        </div>
                                    </TitleContent>
                                    <ChildContent>
                                        <MudStack>
                                            <MudText Typo="Typo.body1" Color="Color.Secondary"><b>@L["ShippingAddress"]</b></MudText>
                                            <AddressInput @bind-Value="@InternalOrganization.ShippingAddress"/>
                                        </MudStack>
                                        <MudStack Class="pt-3">
                                            <MudText Typo="Typo.body1" Color="Color.Secondary"><b>@L["BillingAddress"]</b></MudText>
                                            <AddressInput @bind-Value="@InternalOrganization.BillingAddress"/>
                                        </MudStack>
                                    </ChildContent>
                                </MudExpansionPanel>
                                <MudExpansionPanel @bind-Expanded="accordionItemOtherInformationVisible">
                                    <TitleContent>
                                        <div class="d-flex">
                                            <MudIcon Icon="@Icons.Material.Filled.Info" class="mr-3" Color="Color.Info"/>
                                            <MudText>@L["OtherInformation"]</MudText>
                                        </div>
                                    </TitleContent>
                                    <ChildContent>
                                        <MudStack>
                                            <MudText Typo="Typo.body1" Color="Color.Secondary"><b>@L["SocialInfo"]</b></MudText>
                                            <SocialInfoInput SocialInfo="@InternalOrganization.SocialInfo"/>
                                        </MudStack>
                                        <MudStack Class="pt-3">
                                            <MudText Typo="Typo.body1" Color="Color.Secondary"><b>@L["Tag"]</b></MudText>
                                            <TagInput Tags="@InternalOrganization.Tags"></TagInput>
                                        </MudStack>
                                    </ChildContent>
                                </MudExpansionPanel>
                            </MudExpansionPanels>
                        </MudItem>
                        <MudItem sm="12" xs="12" Class="d-flex justify-end pr-5">
                            <MudButton Color="Color.Primary" OnClick="HandleValidSubmit">@L["Save"]</MudButton>
                            <MudButton Color="Color.Secondary" OnClick="HandleCancel">@L["Cancel"]</MudButton>
                        </MudItem>
                    </MudGrid>
                </MudForm>
            </MudPaper>
        </MudItem>
    </MudGrid>
}

@code
{
    protected bool accordionItemOtherInformationVisible { get; set; } = true;
    protected bool accordionItemMainInformationVisible { get; set; } = true;
    protected bool accordionItemAddressesInformationVisible { get; set; } = true;
    private string GoogleMapsUrl => $"https://www.google.com/maps/search/?api=1&query={Uri.EscapeDataString(OrganizationParameter.BillingAddress.ResolveAddress())}";
    private List<ContactPropertyDto> ListAllContacts { get; set; } =  new();
    private IEnumerable<Guid>? SelectedContactGuids { get; set; } = new List<Guid>();
    private List<Guid> ListContactGuids { get; set; } = new();
    
    private void SelectedGuidsChanged(IEnumerable<Guid>? contacts)
    {
        SelectedContactGuids = contacts;
    }
    
    
    private void mailToAction(MailItemDto mailItem)
    {
        NavigationManager.NavigateTo($"mailto:{mailItem.Email}?subject=[Termocasa] - {CurrentUser.Name}");
    }

    private void mailToAction(List<MailItemDto> mailItems)
    {
        var mailToString = string.Join(";", mailItems.Select(x => x.Email));
        NavigationManager.NavigateTo($"mailto:{mailToString}?subject=[Termocasa] - {CurrentUser.Name}");
    }
    
    
}
