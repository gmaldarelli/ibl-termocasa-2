@inject AbpBlazorMessageLocalizerHelper<IBLTermocasaResource> LH
@using IBLTermocasa.Localization
@using Volo.Abp.AspNetCore.Components.Web
@using IBLTermocasa.Common
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.Http.Client
@using Volo.FileManagement.Files
@inject IUiMessageService UiMessageService
@inject NavigationManager NavigationManager
@inject IFileDescriptorAppService FileDescriptorAppService
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@using EnumExtensions = IBLTermocasa.Types.EnumExtensions
@using MudBlazor
@using Color = MudBlazor.Color
@using Size = MudBlazor.Size
@using MudExtensions
@inherits IBLTermocasaComponentBase

<style>
    .loading-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        justify-content: center;
        align-items: center;
        background-color: rgba(255, 255, 255, 0.8);
        z-index: 9999;
    }
</style>


@if (_isLoading)
{
<div class="loading-container" style="@(_isLoading ? "display: flex;" : "display: none;")">
    <MudProgressCircular Indeterminate="true" Color="Color.Primary" Size="Size.Large"/>
</div>
}
else
{
<MudGrid Class="mt-8">
    <MudItem xs="12" sm="3">
        <MudPaper>
            <MudCard Class="text-center border-bottom pb-3 mb-3">
                <MudCardContent Class="d-flex justify-content-center">
                    <MudGrid>
                        <MudItem xs="12" sm="12" Class="d-flex justify-content-center">
                            <MudImage Width="200" Src="@_contactImageString" Class="d-flex justify-content-center img-fluid rounded-0"/>
                        </MudItem>
                        <MudItem xs="12" sm="12">
                            <MudDivider/>
                            <MudText Typo="Typo.h6">@Contact.Name @Contact.Surname</MudText>
                            <MudText Typo="Typo.h6" Color="Color.Secondary">@(Contact.JobRole ?? "Non definito")</MudText>
                            <MudText Typo="Typo.body2" Style="font-weight: bold" Color="Color.Tertiary">
                                <MudLink Href="@GoogleMapsUrl" Target="_blank">
                                    <MudIcon Color="Color.Secondary" Icon="@Icons.Material.Filled.LocationOn"/>
                                </MudLink>
                                @(Contact.AddressInfo.ResolveAddress())
                            </MudText>
                            <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled" Size="Size.Small">
                                <MudButton>@L["SendMail"]</MudButton>
                                <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown" Size="Size.Small">
                                    @foreach (var mailItem in Contact.MailInfo.MailItems)
                                    {
                                    <MudMenuItem OnClick="@(() => mailToAction(mailItem))">@mailItem.Email</MudMenuItem>
                                    }
                                    @if (Contact.MailInfo.MailItems.Count > 1)
                                    {
                                    <MudDivider/>
                                    <MudMenuItem OnClick="@(() => mailToAction(Contact.MailInfo.MailItems))">@L["SendAtAll"]</MudMenuItem>
                                    }
                                </MudMenu>
                            </MudButtonGroup>
                            <SocialBadge SocialInfo="@InternalContact.SocialInfo"/>
                            <MudText Typo="Typo.body2">@L["RegistrationDate"]</MudText>
                            <MudText Typo="Typo.body2" Style="font-weight: bold">@Contact.CreationTime</MudText>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="9">
        <MudPaper>
            <MudForm @ref="MudFormInternalContact"
                     Model="@InternalContact"
                     Errors="Errors"
                     Validation="Validations"
                     @bind-IsValid="@InternalContactIsValid">
                <MudGrid>
                    <MudItem sm="12" xs="12">
                        <MudExpansionPanels MultiExpansion="true">
                            <MudExpansionPanel @bind-Expanded="accordionItemMainInformationVisible">
                                <TitleContent>
                                    <div class="d-flex">
                                        <MudIcon Icon="@Icons.Material.Filled.Info" class="mr-3" Color="Color.Info"/>
                                        <MudText>@L["MainInformation"]</MudText>
                                    </div>
                                </TitleContent>
                                <ChildContent>
                                    <MudStack Row="true" Class="align-content-start">
                                        <MudTextField @bind-Value="@InternalContact.Title" Label="@L["Title"]"/>
                                        <MudTextField @bind-Value="@InternalContact.Name" Label="@L["Name"]" Required="true"/>
                                        <MudTextField @bind-Value="@InternalContact.Surname" Label="@L["Surname"]" Required="true"/>
                                    </MudStack>
                                    <MudStack Row="true" Class="align-content-start">
                                        <MudTextField @bind-Value="@InternalContact.ConfidentialName" Label="@L["ConfidentialName"]" />
                                        <MudTextField @bind-Value="@InternalContact.JobRole" Label="@L["JobRole"]" />
                                        <MudDatePicker @bind-Date="@InternalContact.BirthDate" Label="@L["BirthDate"]" DateFormat="dd/MM/yyyy"/>
                                    </MudStack>
                                    <MudStack Class="pt-3">
                                        <MudText Typo="Typo.body1" Color="Color.Secondary"><b>@L["Email"]</b></MudText>
                                        <MailInfoInput MailInfo="@InternalContact.MailInfo"/>
                                    </MudStack>
                                    <MudStack Class="pt-3">
                                        <MudText Typo="Typo.body1" Color="Color.Secondary"><b>@L["Phone"]</b></MudText>
                                        <PhoneInfoInput PhoneInfo="@InternalContact.PhoneInfo"/>
                                    </MudStack>
                                    
                                </ChildContent>
                            </MudExpansionPanel>
                            <MudExpansionPanel @bind-Expanded="accordionItemAddressesInformationVisible">
                                <TitleContent>
                                    <div class="d-flex">
                                        <MudIcon Icon="@Icons.Material.Filled.Info" class="mr-3" Color="Color.Info"/>
                                        <MudText>@L["AddressesInformation"]</MudText>
                                    </div>
                                </TitleContent>
                                <ChildContent>
                                    <MudStack>
                                        <MudText Typo="Typo.body1" Color="Color.Secondary"><b>@L["AddressInfo"]</b></MudText>
                                        <AddressInput @bind-Value="@InternalContact.AddressInfo"/>
                                    </MudStack>
                                </ChildContent>
                            </MudExpansionPanel>
                            <MudExpansionPanel @bind-Expanded="accordionItemOtherInformationVisible">
                                <TitleContent>
                                    <div class="d-flex">
                                        <MudIcon Icon="@Icons.Material.Filled.Info" class="mr-3" Color="Color.Info"/>
                                        <MudText>@L["OtherInformation"]</MudText>
                                    </div>
                                </TitleContent>
                                <ChildContent>
                                    <MudStack>
                                        <MudText Typo="Typo.body1" Color="Color.Secondary"><b>@L["SocialInfo"]</b></MudText>
                                        <SocialInfoInput SocialInfo="@InternalContact.SocialInfo"/>
                                    </MudStack>
                                    <MudStack Class="pt-3">
                                        <MudText Typo="Typo.body1" Color="Color.Secondary"><b>@L["Tag"]</b></MudText>
                                        <TagInput Tags="@InternalContact.Tags"></TagInput>
                                    </MudStack>
                                </ChildContent>
                            </MudExpansionPanel>
                        </MudExpansionPanels>
                    </MudItem>
                    <MudItem sm="12" xs="12" Class="d-flex justify-end pr-5">
                        <MudButton Color="Color.Primary" OnClick="HandleValidSubmit">@L["Save"]</MudButton>
                        <MudButton Color="Color.Secondary" OnClick="HandleCancel">@L["Cancel"]</MudButton>
                    </MudItem>
                </MudGrid>
            </MudForm>
        </MudPaper>
    </MudItem>
</MudGrid>
}

@code
{
    protected bool accordionItemOtherInformationVisible { get; set; } = true;
    protected bool accordionItemMainInformationVisible { get; set; } = true;
    protected bool accordionItemAddressesInformationVisible { get; set; } = true;
    private string GoogleMapsUrl => $"https://www.google.com/maps/search/?api=1&query={Uri.EscapeDataString(Contact.AddressInfo.ResolveAddress())}";
    
    private void ToggleMainInformation()
    {
        accordionItemMainInformationVisible = !accordionItemMainInformationVisible;
    }
    private void ToggleAddressesInformation()
    {
        accordionItemAddressesInformationVisible = !accordionItemAddressesInformationVisible;
    }
    private void ToggleOtherInformation()
    {
        accordionItemOtherInformationVisible = !accordionItemOtherInformationVisible;
    }
    
    private void mailToAction(MailItemDto mailItem)
    {
        NavigationManager.NavigateTo($"mailto:{mailItem.Email}?subject=[Termocasa] -  {CurrentUser.Name}");
    }
    
    private void mailToAction(List<MailItemDto> mailItems)
    {
        var mailToString = string.Join(";", mailItems.Select(x => x.Email));
        NavigationManager.NavigateTo($"mailto:{mailToString}?subject=[Termocasa] - {CurrentUser.Name}");
    }
}