@inject AbpBlazorMessageLocalizerHelper<IBLTermocasaResource> LH
@inject IRequestForQuotationsAppService RequestForQuotationsAppService
@using IBLTermocasa.Contacts
@using IBLTermocasa.Localization
@using IBLTermocasa.Organizations
@using IBLTermocasa.RequestForQuotations
@using Volo.Abp.AspNetCore.Components.Web
@using MudBlazor
@using Blazorise.LoadingIndicator
@using Blazorise.Animate
@using IBLTermocasa.Shared
@using Blazorise.SpinKit
@inherits IBLTermocasaComponentBase

<style>
    .datagrid-question tr.table-primary.table-row-selectable,
    .datagrid-question tr.table-row-selectable {
        background: linear-gradient(90deg, rgba(194, 223, 243, 0.5) 40%, rgba(140, 202, 246, 0.3) 60%);
        font-weight: 600;
        letter-spacing: 0.5px;
    }
</style>


@if (isLoading) {
    <LoadingIndicator FullScreen FadeIn @bind-Visible="isLoading" ZIndex="2">
        <IndicatorTemplate>
            <Animate Animation="Animations.FadeDownRight" Auto Duration="TimeSpan.FromMilliseconds(700)">
                <Div>
                    <SpinKit Type="SpinKitType.Wave" Size="100px"/>
                </Div>
            </Animate>
        </IndicatorTemplate>
    </LoadingIndicator>
}else {
    <h1>@L["QuoteNumber"] - @RequestForQuotation.QuoteNumber</h1>
    <MudForm Model="@RequestForQuotation">
        <MudGrid>
            <MudItem xs="6">
                <MudAutocomplete T="OrganizationDto"
                                 Label="@L["Organization"]"
                                 @bind-Value="SelectedOrganization"
                                 ToStringFunc="@(org => org?.Name)"
                                 ResetValueOnEmptyText="true"
                                 MaxItems="null"
                                 SearchFunc="@SearchOrganization"/>
            </MudItem>
            <MudItem xs="6">
                <MudAutocomplete T="ContactDto"
                                 Label="@L["Contact"]"
                                 @bind-Value="SelectedContact"
                                 ToStringFunc="@(contact => contact?.ToStringNameSurname())"
                                 ResetValueOnEmptyText="true"
                                 MaxItems="null"
                                 SearchFunc="@SearchContact"/>
            </MudItem>
            <MudItem xs="6">
                <MudAutocomplete T="LookupDto<Guid>"
                                 Label="@L["Agent"]"
                                 @bind-Value="SelectedAgent"
                                 ToStringFunc="@(agent => agent?.DisplayName)"
                                 ResetValueOnEmptyText="true"
                                 MaxItems="null"
                                 SearchFunc="@SearchAgent"/>
            </MudItem>
            <MudItem xs="6">
                <MudTextField @bind-Value="@InternalRequestForQuotation.WorkSite" Label="@L["WorkSite"]"/>
            </MudItem>
            <MudItem xs="6">
                <MudInputLabel>@L["Email"]</MudInputLabel>
                <MailInfoInput MailInfo="@InternalRequestForQuotation.MailInfo"/>
            </MudItem>
            <MudItem xs="6">
                <MudInputLabel>@L["Phone"]</MudInputLabel>
                <PhoneInfoInput PhoneInfo="@InternalRequestForQuotation.PhoneInfo"/>
            </MudItem>
            <MudItem xs="6">
                <MudTextField @bind-Value="@InternalRequestForQuotation.City" Label="@L["City"]"/>
            </MudItem>
            <MudItem xs="6">
                <MudDatePicker DateChanged="time => InternalRequestForQuotation.DateDocument = time" Label="@L["Date"]" DisableToolbar="true"/>
            </MudItem>
            <MudItem xs="6">
                <MudNumericField T="decimal?" @bind-Value="@InternalRequestForQuotation.Discount" Pattern="^(100(,0|,00)?|([1-9]?\d)(,\d{1,2})?)$" Label="@L["Discount (%)"]"/>
            </MudItem>
            <MudItem xs="6">
                <MudTextField T="string" @bind-Text="@InternalRequestForQuotation.QuoteNumber" Label="@L["QuoteNumber"]"/>
            </MudItem>
        </MudGrid>

        <DataGrid @ref="RequestForQuotationItemsDataGrid"
                  TItem="RequestForQuotationItemDto"
                  Class="datagrid-question"
                  Data="@InternalRequestForQuotation.RequestForQuotationItems"
                  @bind-SelectedRow="@selectedRequestForQuotationItem"
                  DetailRowTrigger="@((e) => e.Item.ProductItems.Any(p => p.ProductId == selectedRequestForQuotationItem?.ProductItems.FirstOrDefault()?.ProductId))"
                  Responsive>
            <DataGridColumns>
                <DataGridCommandColumn />
                <DataGridColumn Caption="Articoli">
                    <DisplayTemplate Context="templateContext">
                        @GetCatalogItemName(templateContext.ProductItems.FirstOrDefault()?.ProductId ?? Guid.Empty)
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
            <DetailRowTemplate Context="detailContext">
                <RequestForQuotationItemInput
                    SelectedRequestForQuotationItem="@detailContext"
                    QuestionTemplateNames="@ListQuestionTemplate">
                </RequestForQuotationItemInput>
            </DetailRowTemplate>
        </DataGrid>
    </MudForm>
}