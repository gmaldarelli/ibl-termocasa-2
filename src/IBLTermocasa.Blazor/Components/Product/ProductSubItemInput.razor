@using IBLTermocasa.Common
@using MudBlazor
@inherits IBLTermocasaComponentBase

<style>

    .mud-dialog-custom {
        display: flex;
        align-items: center;
        justify-content: center;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    
    .navbar-open .mud-dialog-custom {
        left: calc(50% + 264px); /* 264 è stato messo, perchè indica la larghezza della navbar */
    }
</style>

<MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            @DialogTitle
        </MudText>
    </TitleContent>    
    <DialogContent>
        <MudAutocomplete T="ExtendedLookUpDto<Guid>" Label="@ElementName" ValueChanged="@OnItemSelected" SearchFunc="@SearchElement"
                         ResetValueOnEmptyText="@true"
                         CoerceText="true" CoerceValue="true"
                         ToStringFunc="@((ExtendedLookUpDto<Guid> x) => x.DisplayName)"
                         Required="true"
                         Strict="false"
                         ItemDisabledFunc="@ItemDisabledFunc">
            <ItemTemplate Context="item">
                <MudText>@item.DisplayName</MudText>
            </ItemTemplate>
            <ItemDisabledTemplate Context="item">
                <MudText>@item.DisplayName</MudText>
            </ItemDisabledTemplate>
        </MudAutocomplete>
            <MudNumericField @bind-Value="@SelectedOrder" InvertMouseWheel="true"
                             Label="@L["Order"]" Variant="Variant.Filled" Min="@OrderMinValue" Max="@OrderMaxValue"
                             Required="true"/>
            <MudTextField @bind-Value="@SelectedCode" Label="@L["Code"]" Variant="Variant.Filled"
                          Required="true"/>
            <MudTextField @bind-Value="@SelectedName" Label="@L["Name"]" Variant="Variant.Filled"
                          Required="true"/>
            <MudSwitch Value="@SelectedIsMandatory"
                       Class="mud-width-full"
                       Color="MudBlazor.Color.Primary">
                @L["Mandatory"]
            </MudSwitch>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">@L["Cancel"]</MudButton>
        <MudButton  Color="MudBlazor.Color.Primary" OnClick="OnValidSubmit">@L["Save"]</MudButton>
    </DialogActions>
</MudDialog>
</MudForm>


@code {

    private Func<ExtendedLookUpDto<Guid>, bool> ItemDisabledFunc = (ExtendedLookUpDto<Guid> value) => SelectedElementListExisted != null && value.Id.Equals(SelectedElementListExisted.First().ComponentId);
    
}